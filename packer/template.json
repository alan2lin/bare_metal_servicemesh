{
  "builders": [
    {
      "disk_discard": "unmap",
      "disk_image": true,
      "disk_interface": "virtio-scsi",
      "disk_size": "12G",
      "http_directory": "cloud-data",
      "ssh_private_key_file": "/home/alan/packer/id_rsa",
      "iso_checksum": "file:http://cloud-images.ubuntu.com/releases/lunar/release/SHA256SUMS",
      "iso_url": "http://cloud-images.ubuntu.com/releases/lunar/release/ubuntu-23.04-server-cloudimg-amd64.img",
      "qemuargs": [
        [
          "-smbios",
          "type=1,serial=ds=nocloud-net;instance-id=packer;seedfrom=http://{{ .HTTPIP }}:{{ .HTTPPort }}/"
        ]
      ],
      "ssh_username": "packer",
      "ssh_password": "packerpassword",
      "type": "qemu",
      "use_default_display": true
    }
  ],
  "provisioners": [
    {

      "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'",
      "inline": [
        "echo ======= step 1. Prepare packages ",
        "K8SVER=v1.28",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a /usr/bin/apt-get update -y ",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a /usr/bin/apt-get upgrade -y ",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get remove -y docker docker.io containerd runc",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get install -y git snap make apt-transport-https ca-certificates curl ca-certificates curl gnupg lsb-release net-tools ",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a snap install   multipass-sshfs",
        "echo ======= step 1.1 donwload gpg file append repo source",
        "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg",
        "curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null",
        "echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list",
        " echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null",
        "curl -fsSL https://pkgs.k8s.io/core:/stable:/${K8SVER}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg",
        "echo \"deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/${K8SVER}/deb/ /\" | sudo tee /etc/apt/sources.list.d/kubernetes.list",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get update -y",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get upgrade -y",
        "echo ======= step 1.2 install docker",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin",
        "sudo systemctl enable docker",
        "sudo systemctl start docker",
        "sudo docker run hello-world",
        "echo ======= step 1.3 install k8s ",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get install -y kubelet kubeadm kubectl",
        "NEEDRESTART_MODE=a apt-mark hold kubelet kubeadm kubectl",
        "echo ======= step 1.4 install helm ",
        "DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get install -y helm"
      ],
      "type": "shell"
    },
    {
      "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'",
      "inline": [
        "echo ======= step 2. config apps ",
        "echo install cri-dockerd....",
        "echo -e \"overlay\\nbr_netfilter\" | sudo tee /etc/modules-load.d/k8s.conf > /dev/null",
        "modprobe overlay",
        "modprobe br_netfilter",
        "echo -e \"net.bridge.bridge-nf-call-iptables  = 1\\nnet.bridge.bridge-nf-call-ip6tables = 1\\nnet.ipv4.ip_forward                 = 1\" | sudo tee /etc/sysctl.d/k8s.conf > /dev/null",
        "echo -e \"net.ipv4.conf.default.rp_filter     =1\\nnet.ipv4.conf.all.rp_filter      =1\" | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf > /dev/null",
        "sysctl --system",
        "lsmod | grep br_netfilter",
        "lsmod | grep overlay",
        "sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward",
        "cat /sys/fs/cgroup/cgroup.controllers",
        "mkdir -p /usr/local/bin && mkdir -p /tmp/mydata ",
	"cd /tmp/mydata ",
	"git clone https://github.com/Mirantis/cri-dockerd.git ",
	"cd cri-dockerd ",
	"wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.4/cri-dockerd-0.3.4.amd64.tgz",
	"tar -zxvf cri-dockerd-0.3.4.amd64.tgz ",
	"install -o root -g root -m 0755 cri-dockerd/cri-dockerd /usr/local/bin/cri-dockerd ",
	"cp -a packaging/systemd/* /etc/systemd/system",
	"sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service",
	"cd ..",
	"systemctl daemon-reload",
	"systemctl enable cri-docker.service",
	"systemctl enable --now cri-docker.socket",
	"echo \"source <(kubectl completion bash)\" >> ~/.bashrc",
        "echo ======= step 3. end"
      ],
      "type": "shell"
    },
    {
      "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'",
      "inline": [
        "echo ======= step 3. download k8s images",
        "kubeadm config images list",
        "kubeadm config images pull --v=5 --cri-socket=unix:///var/run/cri-dockerd.sock",
        "echo ======= step 3.1 download calico ",
        "sudo docker pull docker.io/calico/cni:v3.26.1",
        "echo ======= step 3.2 download google demo images ",
        "sudo docker pull gcr.io/google-samples/microservices-demo/emailservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/checkoutservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/recommendationservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/frontend:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/paymentservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/productcatalogservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/cartservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/loadgenerator:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/currencyservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/shippingservice:v0.8.0",
        "sudo docker pull gcr.io/google-samples/microservices-demo/adservice:v0.8.0",
        "sudo docker pull registry.k8s.io/metrics-server/metrics-server:v0.6.4",
        "sudo docker pull docker.io/istio/proxyv2:1.18.2",
        "sudo docker pull docker.io/grafana/loki:2.7.3",
        "echo ======= step 3.3 download bookinfo images ",
	"sudo docker pull docker.io/istio/examples-bookinfo-details-v1:1.17.0",
	"sudo docker pull docker.io/kong/httpbin",
	"sudo docker pull docker.io/istio/examples-bookinfo-productpage-v1:1.17.0",
	"sudo docker pull docker.io/istio/examples-bookinfo-ratings-v1:1.17.0",
	"sudo docker pull docker.io/istio/examples-bookinfo-reviews-v1:1.17.0",
	"sudo docker pull docker.io/istio/examples-bookinfo-reviews-v2:1.17.0",
	"sudo docker pull docker.io/istio/examples-bookinfo-reviews-v3:1.17.0",
        "echo ======= step 3.4 download nginx images ",
	"sudo docker pull nginx:1.25.2",
        "echo ======= step 3.5 download metallb images ",
        "sudo docker pull quay.io/frrouting/frr:8.4.2",
        "sudo docker pull quay.io/metallb/controller:v0.13.10",
        "sudo docker pull quay.io/metallb/speaker:v0.13.10",	
        "echo ======= step 3.6 download others images ",
        "sudo docker pull docker.io/calico/kube-controllers:v3.26.1",
        "sudo docker pull docker.io/calico/node:v3.26.1",
        "sudo docker pull docker.io/grafana/loki:2.7.3",
        "sudo docker pull docker.io/istio/pilot:1.18.2",
        "sudo docker pull docker.io/jaegertracing/all-in-one:1.35",
        "sudo docker pull grafana/grafana:9.0.1",
        "sudo docker pull jimmidyson/configmap-reload:v0.8.0",
        "sudo docker pull prom/prometheus:v2.41.0",
        "sudo docker pull quay.io/kiali/kiali:v1.67",
        "echo ======= step 3. end"
      ],
      "type": "shell"
    },
    {
      "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'",
      "inline": [
        "echo ======= step 4. clean ",
        "/usr/bin/apt-get clean",
        "rm -rf /etc/apparmor.d/cache/* /etc/apparmor.d/cache/.features /etc/netplan/50-cloud-init.yaml /etc/ssh/ssh_host* /etc/sudoers.d/90-cloud-init-users",
        "/usr/bin/truncate --size 0 /etc/machine-id",
        "/usr/bin/gawk -i inplace '/PasswordAuthentication/ { gsub(/yes/, \"no\") }; { print }' /etc/ssh/sshd_config",
        "rm -r /root/.ssh",
        "rm /snap/README",
        "find /usr/share/netplan -name __pycache__ -exec rm -r {} +",
        "rm -rf /var/cache/pollinate/seeded /var/cache/snapd/* /var/cache/motd-news",
        "rm -rf /var/lib/cloud /var/lib/dbus/machine-id /var/lib/private /var/lib/systemd/timers /var/lib/systemd/timesync /var/lib/systemd/random-seed",
        "rm -f /var/lib/ubuntu-release-upgrader/release-upgrade-available",
        "rm -f /var/lib/update-notifier/fsck-at-reboot /var/lib/update-notifier/hwe-eol",
        "find /var/log -type f -exec rm {} +",
        "rm -rf /tmp/* /tmp/.*-unix /var/tmp/*",
        "for i in group gshadow passwd shadow subuid subgid; do mv /etc/$i- /etc/$i; done",
        "rm -rf /home/packer",
        "sudo groupadd docker",
        "sudo usermod -aG docker $USER",
        "/bin/sync",
        "/sbin/fstrim -v /"
      ],
      "remote_folder": "/tmp",
      "type": "shell"
    }
  ]
}
